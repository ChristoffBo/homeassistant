import os, json, subprocess
APP_DIR = os.path.dirname(os.path.abspath(__file__))
DATA_DIR = os.path.join(APP_DIR, "data")
OPTIONS_PATH = os.path.join(DATA_DIR, "options.json")
CRON_FILE = "/etc/cron.d/remote_linux_backup"

def load_opts():
    if os.path.exists(OPTIONS_PATH):
        with open(OPTIONS_PATH, "r") as f:
            return json.load(f)
    return {}

def apply():
    opts = load_opts()
    jobs = opts.get("jobs", [])
    lines = ["# auto-generated by remote_linux_backup\n"]
    for j in jobs:
        sched = j.get("schedule","").strip()
        if not sched:
            continue
        payload = json.dumps(j).replace('"','\\"')
        lines.append(f'{sched} root JOB_JSON="{payload}" /usr/bin/python3 /app/job_runner.py >> /var/log/remote_linux_backup.log 2>&1\n')
    with open(CRON_FILE, "w") as f:
        f.write("".join(lines))
    os.chmod(CRON_FILE, 0o644)
    subprocess.run(["crontab", CRON_FILE], check=False)
    return "\n".join(lines)

if __name__ == "__main__":
    print(apply())